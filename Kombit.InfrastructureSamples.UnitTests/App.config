<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8"/>
  </startup>
  <system.serviceModel>
    <extensions>
      <bindingExtensions>
        <add name="LibBasBinding" type="Digst.OioIdws.LibBas.Bindings.LibBasBindingCollectionElement, Digst.OioIdws.LibBas"/>
        <add name="SoapBinding" type="Digst.OioIdws.Soap.Bindings.SoapBindingCollectionElement, Digst.OioIdws.Soap"/>
      </bindingExtensions>
      <behaviorExtensions>
        <add name="LibBasBehavior" type="Digst.OioIdws.LibBas.Behaviors.LibBasClientBehaviorExtensionElement, Digst.OioIdws.LibBas"/>
        <add name="SoapBehavior" type="Digst.OioIdws.Soap.Behaviors.SoapClientBehaviorExtensionElement, Digst.OioIdws.Soap"/>
        <add name="MessageInspectorBehaviorExtension"
        type="Digst.OioIdws.Soap.Behaviors.ClientMessageInspectorBehavior, Digst.OioIdws.Soap" />
      </behaviorExtensions>
    </extensions>
    <behaviors>
      <endpointBehaviors>
        <behavior name="LibBasBehaviourConfiguration">
          <clientCredentials>
            <serviceCertificate>
              <!-- Change this to match the service certificate which is used to authenticate the service to clients.  -->
              <!-- The thumbprint for the certificate to validate responses from Serviceplatformen. The alias is defined in ConfigVariables.cs -->
              <defaultCertificate findValue="D0 8D BB 2D 9C EA 12 56 75 AC A4 63 25 B8 A9 6B 85 23 CC F5" storeLocation="CurrentUser" storeName="My" x509FindType="FindByThumbprint"/>
            </serviceCertificate>
          </clientCredentials>
          <LibBasBehavior/>
        </behavior>
        <behavior name="SoapBehaviourConfiguration">
          <clientCredentials>
            <serviceCertificate>
                <defaultCertificate findValue="fb0c60a083d8cf0286268428fc2304de38020642" storeLocation="CurrentUser" storeName="My" x509FindType="FindByThumbprint"/>
			</serviceCertificate>
          </clientCredentials>
          <MessageInspectorBehaviorExtension/>
          <!--Endpoints can only point to a single behaviour configuration. Hence, we need to include the SoapBehavior in a existing behavior-->
          <SoapBehavior/>
        </behavior>
	    <behavior name="SoapBehaviourConfiguration2">
          <clientCredentials>
            <serviceCertificate>
				<defaultCertificate findValue="ec1f5b59d048e4e475ba1c49eab93e5432c2f387" storeLocation="CurrentUser" storeName="My" x509FindType="FindByThumbprint"/>
			</serviceCertificate>
          </clientCredentials>
          <MessageInspectorBehaviorExtension/>
          <!--Endpoints can only point to a single behaviour configuration. Hence, we need to include the SoapBehavior in a existing behavior-->
          <SoapBehavior/>
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <bindings>
      <LibBasBinding>
        <binding name="LibBasBindingConfiguration" />
      </LibBasBinding>
      <SoapBinding>
        <binding name="SoapBindingConfiguration" useHttps="true" />
      </SoapBinding>
    </bindings>
    <!-- Add your endpoints below -->
    <!-- Simply copy another endpoint and change address, contract and name -->
    <client>
      <endpoint address="https://exttest.serviceplatformen.dk/service/SagDokument/SagDokumentIndeks/5"
    behaviorConfiguration="LibBasBehaviourConfiguration" binding="LibBasBinding"
    bindingConfiguration="LibBasBindingConfiguration" contract="Kombit.InfrastructureSamples.SagDokumentIndeksService.SagDokumentIndeksPortType"
    name="SagDokumentIndeksPort" />
	    <endpoint address="https://klassifikation.eksterntest-stoettesystemerne.dk/klasse_6"
	behaviorConfiguration="SoapBehaviourConfiguration2" binding="SoapBinding" bindingConfiguration="SoapBindingConfiguration"
    contract="Kombit.InfrastructureSamples.KlasseService.KlassePortType"
	name="KlassePort" />
      <endpoint address="https://organisation.eksterntest-stoettesystemerne.dk/organisation/virksomhed/6"
    behaviorConfiguration="SoapBehaviourConfiguration" binding="SoapBinding" bindingConfiguration="SoapBindingConfiguration"
    contract="Kombit.InfrastructureSamples.VirksomhedService.VirksomhedPortType"
    name="VirksomhedPort" />
      <endpoint address="https://organisation.eksterntest-stoettesystemerne.dk/organisation/organisation/6"
    behaviorConfiguration="SoapBehaviourConfiguration" binding="SoapBinding" bindingConfiguration="SoapBindingConfiguration"
    contract="Kombit.InfrastructureSamples.OrganisationService.OrganisationPortType"
    name="OrganisationPort" />
    </client>
    <diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="true" logKnownPii="true" logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true"
    maxMessagesToLog="2147483647" maxSizeOfMessageToLog="2147483647"/>
    </diagnostics>
  </system.serviceModel>
  <system.diagnostics>
    <sources>
      <source name="System.Net" maxdatasize="1024">
        <listeners>
          <add name="MyConsole"/>
        </listeners>
      </source>
      <source name="System.Net.Cache">
        <listeners>
          <add name="MyConsole"/>
        </listeners>
      </source>
      <source name="System.Net.Http">
        <listeners>
          <add name="MyConsole"/>
        </listeners>
      </source>
      <source name="System.Net.Sockets">
        <listeners>
          <add name="MyConsole"/>
        </listeners>
      </source>
      <source name="System.Net.WebSockets" >
        <listeners>
          <add name="MyConsole"/>
        </listeners>
      </source>
      <source name="System.ServiceModel" switchValue="Verbose,ActivityTracing" propagateActivity="true" >
        <listeners>
          <add name="ServiceModelTraceListener">
            <filter type=""/>
          </add>
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging">
        <listeners>
          <add name="ServiceModelMessageLoggingListener">
            <filter type=""/>
          </add>
        </listeners>
      </source>
      <source name="System.ServiceModel"
                    switchValue="Information, ActivityTracing"
                    propagateActivity="true">
        <listeners>
          <add name="sdt"
              type="System.Diagnostics.XmlWriterTraceListener"
              initializeData="SdrConfigExample.svclog"  />
        </listeners>
      </source>
    </sources>
    <switches>
      <add name="System.Net" value="Verbose"/>
      <add name="System.Net.Cache" value="Verbose"/>
      <add name="System.Net.Http" value="Verbose"/>
      <add name="System.Net.Sockets" value="Verbose"/>
      <add name="System.Net.WebSockets" value="Verbose"/>
    </switches>
    <sharedListeners>
      <add initializeData="Tracelog.svclog"
    type="System.Diagnostics.XmlWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
    name="ServiceModelTraceListener" traceOutputOptions="Timestamp">
        <filter type=""/>
      </add>
      <add initializeData="Messages.svclog"
    type="System.Diagnostics.XmlWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
    name="ServiceModelMessageLoggingListener" traceOutputOptions="Timestamp">
        <filter type=""/>
      </add>
      <add name="MyConsole"
           type="System.Diagnostics.TextWriterTraceListener"
           initializeData="network.log"
           traceOutputOptions="ProcessId, DateTime"
    />
    </sharedListeners>
    <trace autoflush="true"/>
  </system.diagnostics>
</configuration>
